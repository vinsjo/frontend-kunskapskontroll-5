@use './style/config' as *;
@use './style/utils' as *;
@use 'sass:map';
@use 'sass:math';

* {
	@include reset;
}

body {
	@include size(100%, fit-content);
	min-height: fit-content;
	@include bg-color(white);
	font-family: map.get($fonts, 'main', 'family');
	font-size: map.get($fonts, 'main', 'size');
	line-height: map.get($fonts, 'main', 'line-height');
	padding: 1rem;
}

input,
textarea,
select,
button {
	@include ui-component;
}

button {
	@include min-size(5ch, 2rem);
	@include bg-color(gray-rgb(50));
	@include set-transition(0.1s, ease, background-color, color, transform);
	&:hover {
		@include bg-color(gray-rgb(75));
		transform: scale(1.05);
	}
	&:disabled {
		@include bg-color(gray-rgb(125));
	}
	&:not(:disabled) {
		cursor: pointer;
	}
}

header,
main,
nav {
	max-width: $max-content-width;
	margin: 0 auto;
}

header {
	padding: 1rem 0;
	margin-bottom: 2rem;
}

main {
	@include size;
	@include flex-center;
}

nav {
	@include size(100%, 4rem);
	@include flex-container(space-between, center, row, 1rem);
	margin: 3rem auto;
}
.gallery {
	@include size(100%, 100%);
	@include grid-container(repeat(auto-fill, 1fr), 1fr, center, center, 1rem);
	.container {
		@include flex-center;
		width: 100%;
		aspect-ratio: 1;
		background-color: rgb(0, 0, 0, 0.05);
		img {
			@include size;
			object-fit: cover;
			opacity: 0;
		}
		&.loaded img {
			@include set-transition(0.25s, ease-in, opacity);
			opacity: 1;
		}
		&.error {
			background-image: url('/assets/grumpy-404.jpeg');
			background-position: center;
			background-repeat: no-repeat;
			background-size: cover;
		}
	}
}

.loading-overlay {
	display: none;
	position: fixed;
	inset: 0 0 0 0;
	background-color: rgba(0, 0, 0, 0.5);
}

.loading .loading-overlay {
	@include flex-center;
	z-index: 10;
	@keyframes spinner-animation {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(360deg);
		}
	}
	.spinner {
		$spinner-duration: 1s;
		@include size(64px, 64px);
		@include grid-container(1fr, 1fr);
		div {
			grid-column: 1;
			grid-row: 1;
			@include size;
			border: 6px solid transparent;
			border-top-color: white;
			border-radius: 50%;
			animation: spinner-animation $spinner-duration
				cubic-bezier(0.5, 1, 0.5, 1) infinite;
		}
		@for $i from 1 through 3 {
			div:nth-child(#{$i}) {
				animation-delay: math.div($spinner-duration, -8) * $i;
			}
		}
	}
}

.error-output {
	position: fixed;
	inset: auto 0 0 0;
	@include bg-color(rgb(163, 0, 0));
	@include flex-container(flex-start);
	z-index: -1;
	padding: 1rem;
	opacity: 0;
	transform: translateY(100%);
	transform-origin: bottom;
}

.error-output.show {
	@include set-transition(0.1s, linear, transform);
	z-index: 20;
	opacity: 1;
	transform: translateY(0);
}

@media (min-width: 500px) {
	.gallery {
		grid-template-columns: repeat(2, 1fr);
	}
}

@media (min-width: 640px) {
	.gallery {
		grid-template-columns: repeat(3, 1fr);
	}
}
@media (min-width: 1024px) {
	.gallery {
		grid-template-columns: repeat(4, 1fr);
	}
}
